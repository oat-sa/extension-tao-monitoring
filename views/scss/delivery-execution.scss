.delivery-executions-progress {
    width: 400px;
}

progress:not(value) {
    /* Add your styles here. As part of this walkthrough we will focus only on determinate progress bars. */
}

/* Styling the determinate progress element */

progress[value] {
    /* Get rid of the default appearance */
    appearance: none;

    /* This unfortunately leaves a trail of border behind in Firefox and Opera. We can remove that by setting the border to none. */
    border: none;

    /* Add dimensions */
    width: 100%;
    height: 20px;

    /* Although firefox doesn't provide any additional pseudo class to style the progress element container, any style applied here works on the container. */
    background-color: whiteSmoke;
    border-radius: 1px;

    /* Of all IE, only IE10 supports progress element that too partially. It only allows to change the background-color of the progress value using the 'color' attribute. */
    color: darkgrey;

    position: relative;
    margin: 0;
}

/* Let's spice up things little bit by using pseudo elements. */
progress[value]::after {
    /* Only webkit/blink browsers understand pseudo elements on pseudo classes. A rare phenomenon! */
    /*content: attr(value);*/
    position: absolute;

    top: 0;
    left: 30px;
}

/* Firefox provides a single pseudo class to style the progress element value and not for container. -moz-progress-bar */

progress[value]::-moz-progress-bar {
    background-size: 35px 20px, 100% 100%, 100% 100%;
    border-radius: 1px;
}

/* Fallback technique styles */
.progress-bar {
    background-color: whiteSmoke;
    border-radius: 1px;

    /* Dimensions should be similar to the parent progress element. */
    width: 100%;
    height:20px;
}

.progress-bar span {
    background-color: whiteSmoke;
    border-radius: 1px;

    display: block;
    text-indent: -9999px;
}

.delivery-executions-progress p[data-value] {
    position: relative;
    
}

/* The percentage will automatically fall in place as soon as we make the width fluid. Now making widths fluid. */

p[data-value]:after {
    content: attr(data-value);
    position: absolute;
    right:0;
}


.pb-de::-webkit-progress-value  {
    background-color: lightgreen;
}

/* Similarly, for Mozillaa. Unfortunately combining the styles for different browsers will break every other browser. Hence, we need a separate block. */

.pb-de::-moz-progress-bar {
    background-color: lightgreen;
}


.connected-users {
    height: 100px;
    width: 100px;
    border-radius: 100px;
    background-color: #fff;
    border: 2px solid grey;
    padding-top: 20px;
    text-align: center;
    margin-bottom: 20px;
}
